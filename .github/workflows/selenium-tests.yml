# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Selenium Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up JDK
    - name: Set up JDK 22
      uses: actions/setup-java@v1
      with:
        java-version: '22'

    # Step 3: Cache Maven dependencies
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    # Step 4: Install Maven dependencies
    - name: Install dependencies
      run: mvn install -DskipTests

    # Step 5: Run Selenium tests
    - name: Run Selenium Tests
      run: mvn test

    # Step 6: Archive test results (JUnit XML reports)
    - name: Archive test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: target/surefire-reports/dependency graph
